# Vault Helm Chart Value Overrides
global:
  enabled: true

injector:
  enabled: true
  image:
    repository: "hashicorp/vault-k8s"
    tag: "latest"

server:
  dataStorage:
    enabled: true
    size: 20Gi
    mountPath: "/vault/data"
    storageClass: longhorn
    accessMode: ReadWriteOnce
    annotations: {}

  image:
    repository: "hashicorp/vault"
    tag: "latest"

  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

  auditStorage:
    enabled: true

  standalone:
    enabled: false

  extraSecretEnvironmentVars:
    - envName: AWS_ACCESS_KEY_ID
      secretName: eks-creds
      secretKey: AWS_ACCESS_KEY_ID
    - envName: AWS_SECRET_ACCESS_KEY
      secretName: eks-creds
      secretKey: AWS_SECRET_ACCESS_KEY

  ha:
    enabled: true
    replicas: 2
    raft:
      enabled: true
      setNodeId: false

      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }

        seal "awskms" {
          region     = "us-east-1"
          kms_key_id = "ea9aa197-c6a6-449b-abef-ece7e08203eb"
        }

        storage "raft" {
          path = "/vault/data"

          retry_join {
            leader_api_addr = "http://vault-0.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal:8200"
          }
        }

        service_registration "kubernetes" {}

ui:
  enabled: true
  serviceType: "ClusterIP"
  serviceNodePort: null
  externalPort: 8200

ingress:
  enabled: true

  # Use the external Traefik controller and bind to the secure entrypoint
  annotations:
    kubernetes.io/ingress.class: traefik-external
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"  
    traefik.ingress.kubernetes.io/router.tls.store: default                   # reference the TLSStore “default” :contentReference[oaicite:0]{index=0}
    traefik.ingress.kubernetes.io/router.tls.store.namespace: traefik

  # If you prefer ingressClassName over the deprecated annotation:
  ingressClassName: traefik-external

  # Required since Kubernetes 1.19+
  pathType: Prefix

  hosts:
    - host: vault.vng.bet
      paths:
        - path: /

  # Leave the TLS list empty so Traefik will fall back to your TLSStore “default”  
  tls: []                                                                  # no secretName → use default TLSStore :contentReference[oaicite:1]{index=1}
